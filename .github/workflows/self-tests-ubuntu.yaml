name: Ubuntu self-tests

on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # Each map in the 'mpi_options' array contains a flag indicating whether
        # to enable MPI and the name of the configuration file required for the
        # MPI case, respectively
        mpi_options:
          [
            { enable: false, config_file: default_ci },
            { enable: true, config_file: mpi_default_ci },
          ]

    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install requirements
        run: sudo apt-get install make automake libtool libtool-bin autoconf doxygen gfortran g++ libboost-dev

      # PM: Temporary patch to handle deprecation of Python 2.7 by GitHub runners. Should be removed
      # as soon as we have moved to a more recent version of Trilinos. N.B. we install Python 3
      # again after installing Python 2.7, as the installation of the latter forces the former to
      # be unlinked, and thus Python 3 won't be found by other programs. Installing it again doesn't
      # overwrite the Python 2 installation.
      - name: Install Python 2.7
        uses: LizardByte/setup-python-action@master
        with:
          python-version: "2.7"

      - name: Install Python 3.10
        uses: LizardByte/setup-python-action@master
        with:
          python-version: "3.10"

      - name: Install MPI requirements (if required)
        if: ${{ matrix.mpi_options.enable == true }}
        run: sudo apt-get install openmpi-bin libopenmpi-dev

      - name: Find MPI include directory path, if required
        if: ${{ matrix.mpi_options.enable == true }}
        run: |
          printf "\nFULL MPICC SHOWME:\n    $(mpicc --showme)\n\n"

          found_mpi_header=0
          for pth in $(mpicc --showme:incdirs); do
            printf "INCLUDE PATH: $pth\n"
            printf "SEARCHING FOR MPI.H: "
            if [ ! -z $(find "$pth" -iname mpi.h) ]; then
              printf "...found mpi.h!\n"
              echo "mpi_h_loc=$pth" >> $GITHUB_OUTPUT
              printf "EXPORTING INCLUDE PATH!\n"
              found_mpi_header=1
              break
            else
              printf "...couldn't find mpi.h!\n"
              printf "FILES INSIDE MPI INCLUDE DIRECTORY:\n\n"
              ls -l "$pth"
              printf "\n"
            fi
          done
          if [ ${found_mpi_header} -eq 0 ]; then
            exit 1
          fi
        id: find_mpi_header

      - name: Add MPI include path into config file
        if: ${{ matrix.mpi_options.enable == true }}
        run: |
          printf '%s\n' '--with-mpi-include-directory=${{ steps.find_mpi_header.outputs.mpi_h_loc }}' >> config/configure_options/${{ matrix.mpi_options.config_file }} && \
          ( export LC_ALL=C; sort -o config/configure_options/${{ matrix.mpi_options.config_file }} config/configure_options/${{ matrix.mpi_options.config_file }})

      - name: Print updated config file (without comments)
        if: ${{ matrix.mpi_options.enable == true }}
        run: cat config/configure_options/${{ matrix.mpi_options.config_file }} | sed '/^#/d'

      - name: Get external distribution tar files (if MPI is used)
        if: ${{ matrix.mpi_options.enable == true }}
        run: bin/get_external_distribution_tar_files.bash

      - name: Build
        run: |
          config_file=config/configure_options/${{ matrix.mpi_options.config_file }};
          ./non_interactive_autogen.sh -s -j$(nproc) -c $config_file

      # Continue running even if the test fails so that the validation.log can be
      # uploaded and reviewed later on
      - name: Validate
        id: self_tests
        run: 
          ./bin/parallel_self_test.py -l demo_drivers/axisym_navier_stokes/axi_dynamic_cap -l demo_drivers/axisym_navier_stokes/temp -l demo_drivers/linearised_free_surface_axisym_navier_stokes/axi_dynamic_cap_stability
        continue-on-error: true

      - name: Upload validation log file
        uses: actions/upload-artifact@v4
        with:
          name: validation-${{ runner.os }}-MPI_${{ matrix.mpi_options.enable }}.log
          path: ./validation.log

      - name: Propagate self-test status
        if: steps.self_tests.outcome == 'failure'
        run: exit 1
